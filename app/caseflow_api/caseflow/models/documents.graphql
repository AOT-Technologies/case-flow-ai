type Document {
  name: String
  caseid: ID
  cases: Cases @materializer(query: "getCasesUsingDocument_caseid_fkey")
  content: String
  contentsize: Int
  contenttype: String
  creationdate: DateTime
  creationuser: String
  description: String
  dms_provider: Int
  docname: String
  documentid: String
  downloadurl: String
  id: Int!
  isdeleted: Boolean
  latestversion: String
  metadata: String
  modificationdate: DateTime
  modificationuser: String
  versions: [Versions] @materializer(query: "getVersionsUsingVersions_fk")
}

"""
These are some examples of queries generated from the schema. Feel free to modify them or add your own.
"""
type Query {
  getDocumentList: [Document]
    @dbquery(
      type: "postgresql"
      schema: "public"
      table: "document"
      configuration: "postgresql_config"
    )
  """
  update document Mutation
  """
  getDocumentId(documentid: String!): Document
    @dbquery(
      type: "postgresql"
      query: """
      Select id FROM  "Document"  WHERE "documentid" = $1
      """
      configuration: "postgresql_config"
    )
  getDocument(id: Int!): Document
    @dbquery(
      type: "postgresql"
      schema: "public"
      table: "document"
      configuration: "postgresql_config"
    )
  getDocumentUsingVersions(id: Int!): [Document]
    @dbquery(
      type: "postgresql"
      query: """
      SELECT T."content", T."contentsize", T."contenttype", T."creationdate", T."creationuser", T."description", T."documentid", T."downloadurl", T."dms_provider", T."id", T."latestversion", T."metadata", T."modificationdate", T."modificationuser", T."name", T."docname", T."versions"
        FROM "public"."Document" T
        WHERE T."versions" = $1
      """
      configuration: "postgresql_config"
    )
}

"""
insert document Mutation
"""
type Mutation {
  insertDocument(
    modificationdate: DateTime!
    downloadurl: String!
    creationuser: String!
    description: String!
    name: String!
    docname: String!
    documentid: String!
    content: String!
    modificationuser: String!
    contentsize: Int!
    creationdate: DateTime!
    latestversion: String!
    metadata: String!
    contenttype: String!
    dms_provider: Int!
    caseid: Int
    isdeleted: Boolean
  ): Document
    @dbquery(
      type: "postgresql"
      schema: "public"
      table: "document"
      dml: INSERT
      configuration: "postgresql_config"
    )
  """
  delete document Mutation
  """
  deleteDocument(documentid: String!): Document
    @dbquery(
      type: "postgresql"
      schema: "public"
      table: "document"
      dml: DELETE
      configuration: "postgresql_config"
    )
  """
  update document Mutation
  """
  updateDocument(
    documentid: String!
    modificationdate: DateTime
    downloadurl: String
    creationuser: String
    description: String
    name: String
    content: String
    modificationuser: String
    contentsize: Int
    latestversion: String
    contenttype: String
    docname: String
  ): Document
    @dbquery(
      type: "postgresql"
      query: """
      UPDATE "document" SET
        "caseid" = COALESCE($2, "caseid"),
        "content" = COALESCE($3, "content"),
        "contentsize" = COALESCE($4, "contentsize"),
        "contenttype" = COALESCE($5, "contenttype"),
        "creationdate" = COALESCE($6, "creationdate"),
        "creationuser" = COALESCE($7, "creationuser"),
        "description" = COALESCE($8, "description"),
        "dms_provider" = COALESCE($9, "dms_provider"),
        "docname" = COALESCE($10, "docname"),
        "documentid" = COALESCE($11, "documentid"),
        "downloadurl" = COALESCE($12, "downloadurl"),
        "isdeleted" = COALESCE($13, "isdeleted"),
        "latestversion" = COALESCE($14, "latestversion"),
        "metadata" = COALESCE($15, "metadata"),
        "modificationdate" = COALESCE($16, "modificationdate"),
        "modificationuser" = COALESCE($17, "modificationuser"),
        "name" = COALESCE($18, "name")
      WHERE
        "id" = $1
      RETURNING *
      """
      configuration: "postgresql_config"
      schema: "public"
    )

  deleteDocumentByCaseId(
    caseid: ID!
    isdeleted: Boolean
  ): Document
    @dbquery(
      type: "postgresql"
      query: """
      UPDATE "document" SET
        "isdeleted" = COALESCE($2, "isdeleted")
      WHERE
        "caseid" = $1
      RETURNING *
      """
      configuration: "postgresql_config"
      schema: "public"
    )
}
