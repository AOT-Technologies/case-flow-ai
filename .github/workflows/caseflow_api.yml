name: Caseflow API
on:
  workflow_dispatch:
    inputs:
      ecr:
        required: true
      version:
        required: true
      reponame:
        required: true
      CMS_REPO_URL:
        required: true
      CMS_REPO_USERNAME:
        required: true
      CMS_REPO_PASSWORD:
        required: true
      STEPZEN_ENDPOINT_URL:
        required: true
      STEPZEN_API_KEY:
        required: true
      WEB_BASE_URL:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      SHAREPOINT_SITE:
        required: true
      SHAREPOINT_USERNAME:
        required: true
      SHAREPOINT_SITE_NAME:
        required: true
      S3_DEFAULT_PERMISSION:
        required: true
      SHARE_POINT_FOLDER_NAME:
        required: true
      JWT_OIDC_AUDIENCE:
        required: true
      KEYCLOAK_URL_REALM:
        required: true
      SHAREPOINT_DOC:
        required: true
      S3_BUCKET_NAME:
        required: true
      SHAREPOINT_PASSWORD:
        required: true
      JWT_OIDC_JWKS_URI:
        required: true
jobs:
  build:
    name: Build Image
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]
    
    steps:
    
    - name: Check out code
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ca-central-1
      
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
    
    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: ./app/caseflow_api
        push: true
        tags: ${{ github.event.inputs.ecr }}/${{ github.event.inputs.reponame }}:${{ github.event.inputs.version }}
    
    - name: Fill in the new image ID in the Amazon ECS task definition
      id: task-def
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: caseflow_api.json
        container-name: caseflow_api
        image: ${{ github.event.inputs.ecr }}/${{ github.event.inputs.reponame }}:${{ github.event.inputs.version }}
    
    - name: Deploy Amazon ECS task definition
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.task-def.outputs.task-definition }}
        service: caseflow_api
        cluster: caseflow
        wait-for-service-stability: true